## Includes extra headers for the Linux platform.
package = platform.linux.extra
noStringConversion = open opendir access mkdir rmdir unlink realpath readlink rename symlink stat lstat strlen strnlen
---
#include <sys/types.h>
#include <sys/stat.h>
#include <dirent.h>

// Not available in the default posix bindings?
extern int eventfd (unsigned int __count, int __flags);

// Equally not available...
extern ssize_t getrandom (void *__buffer, size_t __length,
                   unsigned int __flags);

extern int getentropy (void *__buffer, size_t __length);

// Avoids the fucking auto-string conversion!
extern size_t strlen(const char *s);
extern size_t strnlen(const char *s, size_t maxlen);

extern int open(const char *path, int oflag, ...);
extern DIR *opendir(const char *path);
extern int stat(const char *pathname, struct stat *statbuf);
extern int lstat(const char *pathname, struct stat *statbuf);
extern int access(const char *path, int amode);
extern int mkdir(const char *path, mode_t mode);
extern int rmdir(const char *path);
extern int unlink(const char *path);
extern char *realpath(const char *path, char *resolved_path);
extern ssize_t readlink(const char *path, char *buf, size_t bufsize);
extern int rename(const char *old, const char *new);
extern int symlink(const char *path1, const char *path2);
